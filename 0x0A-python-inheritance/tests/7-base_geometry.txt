``7-base_geometry`` tests
=========================

using ``7-base_geometry``
-------------------------

Import from module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

test classtype:
	>>> bg = BaseGeometry()
	>>> type(bg) == BaseGeometry
	True

test area
---------

test area normal:
	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

test area function:
	>>> type(BaseGeometry.__dict__['area'])
	<class 'function'>

test area aargs:
	>>> bg.area(55)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 2 were given

test integer
------------

test int function:
	>>> type(BaseGeometry.__dict__['integer_validator'])
	<class 'function'>

check the output str:
	>>> bg.integer_validator("hey", "john")
	Traceback (most recent call last):
	TypeError: hey must be an integer

check the output normal int:
	>>> bg.integer_validator("age", 17)

check the output 0 int:
	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

check the output float:
	>>> bg.integer_validator("age", 5.0)
	Traceback (most recent call last):
	TypeError: age must be an integer

check the output neg int:
	>>> bg.integer_validator("age", -55)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

check the args:
	>>> bg.integer_validator(5, 5, 5)
	Traceback (most recent call last):
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

check the args2:
	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

check the output bool:
	>>> bg.integer_validator("age", True)
	Traceback (most recent call last):
	TypeError: age must be an integer

check the output none:
	>>> bg.integer_validator("age", None)
	Traceback (most recent call last):
	TypeError: age must be an integer

check the output list:
	>>> bg.integer_validator("age", [6])
	Traceback (most recent call last):
	TypeError: age must be an integer
