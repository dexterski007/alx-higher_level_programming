``7-base_geometry`` tests
=========================

using ``7-base_geometry``
-------------------------

Import from module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

test classtype:
	>>> bg = BaseGeometry()
	>>> type(bg) == BaseGeometry
	True

test area
---------

test area normal:
	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

test area function:
	>>> type(BaseGeometry.__dict__['area'])
	<class 'function'>

test integer
------------

test int function:
	>>> type(BaseGeometry.__dict__['integer_validator'])
	<class 'function'>

check the output str:
	>>> bg.integer_validator("hey", "john")
	Traceback (most recent call last):
	TypeError: hey must be an integer

check the output normal int:
	>>> bg.integer_validator("age", 17)

check the output 0 int:
	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

check the output neg int:
	>>> bg.integer_validator("age", -55)
	Traceback (most recent call last):
	ValueError: age must be greater than 0