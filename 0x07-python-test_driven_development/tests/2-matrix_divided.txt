This ``2-matrix_divided`` module
=============================

Using ``2-matrix_divided``
-----------------------

import function from module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test int argument:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 2))
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Test rounded:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 9))
    [[0.11, 0.22, 0.33], [0.44, 0.56, 0.67]]

Test origin:

    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

Test empty matrix:

    >>> matrix = None
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test div by zero:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Test div is number:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "hello"))
    Traceback (most recent call last):
    TypeError: div must be a number

Test div is None:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

Test matrix is uneven:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Test matrix is not int or float:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, "hey", "test"]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix is none:

    >>> matrix = None
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix is empty:

    >>> matrix = []
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix is empty:

    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 3))
    [[]]

Test matrix is string:

    >>> matrix = "hello, world"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix is a list:

    >>> matrix = [5, 2, 4]
    >>> print(matrix_divided(matrix, 8))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix is floats:

    >>> matrix = [
    ...     [1.1, -2.2, 3.3],
    ...     [4.4, 5.5, -6.6]
    ... ]
    >>> print(matrix_divided(matrix, 5))
    [[0.22, -0.44, 0.66], [0.88, 1.1, -1.32]]

Test matrix is floats and int:

    >>> matrix = [
    ...     [1.1, 5, 3.3],
    ...     [4.4, 5.5, -6.6]
    ... ]
    >>> print(matrix_divided(matrix, 5))
    [[0.22, 1.0, 0.66], [0.88, 1.1, -1.32]]

Test missing 1 arg:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'